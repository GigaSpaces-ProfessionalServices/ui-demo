<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.openspaces.org/schema/core http://www.openspaces.org/schema/core/openspaces-core.xsd">

    <!--
        Spring property configurer which allows us to use system properties (such as user.name).
    -->
    <bean id="propertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"/>

    <!--
        A bean representing a space (an IJSpace implementation).
        Note, we perform a lookup on the space since we are working against a remote space.
    -->
    <os-core:space-proxy id="space" name="mySpace" lookup-timeout="20000"/>

    <os-core:local-cache id="localCache" space="space"/>
    <!--
   Enables the usage of @GigaSpaceContext annotation based injection.
-->
    <os-core:giga-space-context/>

    <!--
        A bean representing a space (an IJSpace implementation).

        Note, we perform a lookup on the space since we are working against a remote space.
    -->
    <os-core:space id="space" url="jini://*/*/space" />

    <!--
        OpenSpaces simplified space API built on top of IJSpace/JavaSpace.
    -->
    <os-core:giga-space id="gigaSpace" space="space"/>
    <bean id="WebApplication" class="com.gigaspaces.web_application.web.WebApplication"  depends-on="gigaSpace">
    </bean>



</beans>
